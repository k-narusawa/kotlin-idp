import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.jetbrains.kotlin.jvm' version '1.8.21'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.8.21'
    id 'com.google.cloud.tools.jib' version '3.3.2'
    id 'jacoco'
}

group = 'com.knarusawa.demo.idp'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.0'
    implementation 'org.springframework.data:spring-data-jpa:3.1.0'
    implementation 'com.warrenstrange:googleauth:1.5.0'
    implementation 'com.google.zxing:core:3.5.2'
    implementation 'com.google.zxing:javase:3.5.2'
    implementation 'org.webjars:bootstrap:5.3.0'
    implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.12.546'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.15.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server:3.1.0'
    implementation 'org.springframework:spring-jdbc:6.0.10'
    implementation 'com.zaxxer:HikariCP:5.0.1'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.flywaydb:flyway-core:9.19.4'
    implementation 'org.flywaydb:flyway-mysql:9.19.4'
    implementation 'org.springframework.security:spring-security-cas:6.1.1'
    implementation 'org.webjars:popper.js:2.9.3'

    runtimeOnly 'org.jetbrains.kotlin:kotlin-reflect:1.8.22'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.mockk:mockk:1.13.5'
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs += '-Xjsr305=strict'
        jvmTarget = '17'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

jib {
    from {
        image = 'openjdk:alpine'
    }
    to {
        image = 'registry.hub.docker.com/19992240/kotlin-idp'
        tags = ['latest']
    }
    container {
        jvmFlags = [
                '-Xms512m',
                '-Xdebug'
        ]
        ports = ['8080']
    }
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}
